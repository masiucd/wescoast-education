(()=>{"use strict";var e,t,n=function(e){var t=e.id,n=e.firstName,i=e.lastName,a=e.email,r=e.age,o=e.type;return{id:t,firstName:n,lastName:i,email:a,age:r,type:o,showCase:function(){return{name:n+" "+i,email:a,age:""+r}}}},i=[n({id:1,firstName:"mark",lastName:"smith",email:"mark@io.com",age:37,type:"t"}),n({id:2,firstName:"george",lastName:"pierre",email:"pierre@io.com",age:48,type:"t"}),n({id:3,firstName:"carl",lastName:"carl",email:"carl@io.com",age:36,type:"t"}),n({id:4,firstName:"bob",lastName:"rooney",email:"bob@io.com",age:31,type:"t"})],a=function(e,t,n,i){var a=function(){return'   \n    <div class="table-wrapper wrapper-'+n+'">\n    <table class="'+n+'">\n        <caption>'+n+"</caption>\n        <thead>\n          "+i.map((function(e){return"<th>"+e+"</th>"})).join("")+"\n        </thead>\n        <tbody>\n          "+t.map((function(e){var t=e.showCase();return'\n                <tr data-id="'+e.id+'" id="'+("s"===e.type?"student-"+e.id:"t"===e.type?"teacher-"+e.id:"course-"+e.id)+'">\n                '+Object.keys(t).map((function(e){return'<td data-info="'+t[e]+'">'+t[e]+"</td>"})).join("")+"\n                </tr>\n          "})).join("")+"\n        </tbody>\n      </table>\n    </div>\n    "};return{init:function(){e.innerHTML=a()},rawHtml:a,onClick:function(e){document.querySelectorAll("tr").forEach((function(t){return t.addEventListener("click",(function(){"student"===t.id.split("-")[0]&&e(parseInt(t.dataset.id,10))}))}))}}},r=function(e,t,n,i){return{id:e,title:t,about:n,duration:i,showCase:function(){return{title:t,duration:i}}}},o=[r(1,"french","french class","5h"),r(2,"history","history class","3h"),r(3,"math","math class","4h"),r(4,"english","english class","3h")],s=function(e){var t=e.id,n=e.firstName,i=e.lastName,a=e.email,r=e.age,o=e.type;return{id:t,firstName:n,lastName:i,email:a,age:r,type:o,showCase:function(){return{name:n+" "+i,email:a,age:""+r}}}},m=[s({id:1,firstName:"bob",lastName:"smith",email:"bob@io.com",age:17,type:"s"}),s({id:2,firstName:"joe",lastName:"jonsson",email:"joe@io.com",age:18,type:"s"}),s({id:3,firstName:"philip",lastName:"oconnor",email:"ph@io.com",age:16,type:"s"}),s({id:4,firstName:"anna",lastName:"franklin",email:"anna@io.com",age:21,type:"s"})],c=new(function(){function e(){this.collection={},this.messages=[]}return e.prototype.register=function(e){this.collection[e.name]=e,e.adminMediator=this},e.prototype.send=function(e,t){this.messages.push({message:e,from:t})},e}()),l=function(){function e(e){this.name=e,this.adminMediator=null}return e.prototype.send=function(e){var t;null===(t=this.adminMediator)||void 0===t||t.send(e,this)},e}(),d=function(e,t,n,i,r){var o=a(e,n,i,r),s="",m=function(){!function(){var n;e.classList.add("show-modal");var i='\n    <div class="modal-container">\n      '+o.rawHtml()+"\n      "+s+'\n      <button class="close-modal">\n        ‚ùå\n      </button>\n    </div>\n    ';e.innerHTML=i,null===(n=document.querySelector(".close-modal"))||void 0===n||n.addEventListener("click",(function(){e.classList.remove("show-modal")}));var a=new l(t.firstName);c.register(a);var r=document.querySelectorAll(".modal tbody tr td");Array.from(r).forEach((function(e){var n=e.dataset.info;"english"!==n&&"french"!==n&&"history"!==n&&"math"!==n||e.addEventListener("click",(function(e){a.send("Student "+t.firstName+" "+t.lastName+" has been registered for the course "+n);var i="You have now been registered to the "+e.target.innerText+" Course";s=i,console.log(c),m()}))}))}()};return{init:m}};(function(e){void 0===e&&(e=document.querySelector(".main"));var t=a(e,m,"students",["name","email","age"]),n=function(e){var t=m.find((function(t){return t.id===e})),n=document.querySelector(".modal");d(n,t,o,"courses",["title","duration"]).init()};return{init:function(){t.init(),t.onClick(n)}}})(document.getElementById("students")).init(),(e=document.getElementById("teachers"),t=a(e,i,"teachers",["name","email","age"]),{init:function(){t.init()}}).init(),function(e){var t,n,i,a,r,o=function(e,t,n){var i=new l(n.firstName),a=[],r=function(){return a=t.messages},o=function(){!function(){var t='\n      <div class="admin-wrapper wrapper-'+i.name+'">\n      <button id="admin-profile-btn" class="button">Info</button>\n      <div class="admin-content">\n        <h3> Mr Admin '+i.name+"</h3>\n        <p>"+i.name+'</p>\n        <ul class="admin-messages-list">\n          '+(a.length>0?a.map((function(e){return" <li>"+e.message+"</li> "})).join(""):"<p>No registered students YET!</p>")+"\n        </ul>\n        </div>\n\n    </div>\n      ";e.innerHTML=t,r();var n=document.getElementById("admin-profile-btn");null==n||n.addEventListener("click",(function(){r(),o()}))}()};return{init:o}}(e,c,{id:(t={id:204,firstName:"Bruce",lastName:"Wayne",age:45,email:"batman@io.com",type:"a"}).id,firstName:n=t.firstName,lastName:i=t.lastName,email:a=t.email,age:r=t.age,type:t.type,showCase:function(){return{name:n+" "+i,email:a,age:""+r}}});return{init:function(){o.init()}}}(document.getElementById("admin")).init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY2hvb2wtZGF0YS8uL3NyYy93ZXNjb2FzdDMuMC9tb2RlbHMvdGVhY2hlci50cyIsIndlYnBhY2s6Ly9zY2hvb2wtZGF0YS8uL3NyYy93ZXNjb2FzdDMuMC9jb250cm9sbGVycy90ZWFjaGVyLnRzIiwid2VicGFjazovL3NjaG9vbC1kYXRhLy4vc3JjL3dlc2NvYXN0My4wL3ZpZXdzL2xpc3Qtdmlldy50cyIsIndlYnBhY2s6Ly9zY2hvb2wtZGF0YS8uL3NyYy93ZXNjb2FzdDMuMC9tb2RlbHMvY291cnNlLnRzIiwid2VicGFjazovL3NjaG9vbC1kYXRhLy4vc3JjL3dlc2NvYXN0My4wL21vZGVscy9zdHVkZW50LnRzIiwid2VicGFjazovL3NjaG9vbC1kYXRhLy4vc3JjL3dlc2NvYXN0My4wL21lZGlhdG9yL21haW4udHMiLCJ3ZWJwYWNrOi8vc2Nob29sLWRhdGEvLi9zcmMvd2VzY29hc3QzLjAvbWVkaWF0b3Ivc2VydmljZS50cyIsIndlYnBhY2s6Ly9zY2hvb2wtZGF0YS8uL3NyYy93ZXNjb2FzdDMuMC92aWV3cy9tb2RhbC12aWV3LnRzIiwid2VicGFjazovL3NjaG9vbC1kYXRhLy4vc3JjL3dlc2NvYXN0My4wL2NvbnRyb2xsZXJzL3N0dWRlbnQudHMiLCJ3ZWJwYWNrOi8vc2Nob29sLWRhdGEvLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vc2Nob29sLWRhdGEvLi9zcmMvd2VzY29hc3QzLjAvY29udHJvbGxlcnMvYWRtaW4udHMiLCJ3ZWJwYWNrOi8vc2Nob29sLWRhdGEvLi9zcmMvd2VzY29hc3QzLjAvbW9kZWxzL2FkbWluLnRzIiwid2VicGFjazovL3NjaG9vbC1kYXRhLy4vc3JjL3dlc2NvYXN0My4wL3ZpZXdzL2FkbWluLXZpZXcudHMiXSwibmFtZXMiOlsicGFyZW50RWxlbWVudCIsInZpZXciLCJ0ZWFjaGVyIiwiaWQiLCJmaXJzdE5hbWUiLCJsYXN0TmFtZSIsImVtYWlsIiwiYWdlIiwidHlwZSIsInNob3dDYXNlIiwibmFtZSIsInRlYWNoZXJzIiwibGlzdFZpZXciLCJ4cyIsInRpdGxlIiwic3ViVGl0bGVzIiwicmF3SHRtbCIsIm1hcCIsInQiLCJqb2luIiwiZGF0YSIsIk9iamVjdCIsImtleXMiLCJrZXkiLCJpbml0IiwiaW5uZXJIVE1MIiwib25DbGljayIsImhhbmRsZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwidHIiLCJhZGRFdmVudExpc3RlbmVyIiwic3BsaXQiLCJwYXJzZUludCIsImRhdGFzZXQiLCJjb3Vyc2UiLCJhYm91dCIsImR1cmF0aW9uIiwiY291cnNlcyIsInN0dWRlbnQiLCJzdHVkZW50cyIsImFkbWluTWVkaWF0b3IiLCJ0aGlzIiwiY29sbGVjdGlvbiIsIm1lc3NhZ2VzIiwicmVnaXN0ZXIiLCJzZXJ2aWNlIiwic2VuZCIsIm1lc3NhZ2UiLCJmcm9tIiwicHVzaCIsIm1vZGFsVmlldyIsInBlcnNvbiIsIm1lc3NhZ2VGb3JQZXJzb24iLCJjbGFzc0xpc3QiLCJhZGQiLCJodG1sIiwicXVlcnlTZWxlY3RvciIsInJlbW92ZSIsInN0dWRlbnRTZXJ2aWNlIiwiU2VydmljZSIsInRkcyIsIkFycmF5IiwidGQiLCJpbmZvIiwiZXZlbnQiLCJjb25maXJtYXRpb25UZXh0IiwidGFyZ2V0IiwiaW5uZXJUZXh0IiwiY29uc29sZSIsImxvZyIsInJlbmRlciIsImdldFN0dWRlbnQiLCJmaW5kIiwibW9kYWwiLCJzdHVkZW50Q29udHJvbGxlciIsImdldEVsZW1lbnRCeUlkIiwiYWRtaW4iLCJhZG1pblNlcnZpY2UiLCJnZXRBZG1pbk1lc3NhZ2VzIiwibGVuZ3RoIiwieCIsImJ0biIsImFkbWluVmlldyIsImFkbWluQ29udHJvbGxlciJdLCJtYXBwaW5ncyI6Im1CQUVBLElDQzJCQSxFQUNuQkMsRURGRkMsRUFBVSxTQUFDLEcsSUFBRUMsRUFBRSxLQUFFQyxFQUFTLFlBQUVDLEVBQVEsV0FBRUMsRUFBSyxRQUFFQyxFQUFHLE1BQUVDLEVBQUksT0FTMUQsTUFB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QThCb0MsR0FDOUUsSUFBTUMsRUFBZSxJQUFJbEIsRUFBUWlCLEVBQU0xRSxXQUVuQ1MsRUFBNEMsR0FFMUNtRSxFQUFtQixXQUd2QixPQUZBbkUsRUFBSzZCLEVBQWNHLFVBbUNmckIsRUFBTyxZQTlCRSxXQUNiLElBQU1pQyxFQUFPLDZDQUN5QnNCLEVBQWFyRSxLQUFJLG1JQUduQ3FFLEVBQWFyRSxLQUFJLHFCQUM1QnFFLEVBQWFyRSxLQUFJLDhEQUdsQkcsRUFBR29FLE9BQVMsRUFDUnBFLEVBQUdJLEtBQUksU0FBQWlFLEdBQUssY0FBUUEsRUFBRWpDLFFBQU8sWUFBVTlCLEtBQUssSUFDNUMsc0NBQW9DLHdEQVFoRG5CLEVBQWN5QixVQUFZZ0MsRUFDMUJ1QixJQUVBLElBQU1HLEVBQU12RCxTQUFTaUQsZUFBZSxxQkFFcENNLFdBQUtuRCxpQkFBaUIsU0FBUyxXQUM3QmdELElBQ0F4RCxPQUtGZ0QsSUFHRixNQUFPLENBQ0xoRCxLQUFJLEdGN0NPNEQsQ0FDWHBGLEVBQ0EwQyxFQ0lLLENBQ0x2QyxJQVZXLEVETUUsQ0FDWEEsR0FBSSxJQUNKQyxVQUFXLFFBQ1hDLFNBQVUsUUFDVkUsSUFBSyxHQUNMRCxNQUFPLGdCQUNQRSxLQUFNLE1DWk8sR0FXZkosVUFYaUJBLEVBQVMsWUFZMUJDLFNBWjRCQSxFQUFRLFdBYXBDQyxNQWJzQ0EsRUFBSyxRQWMzQ0MsSUFkNkNBLEVBQUcsTUFlaERDLEtBZnNELE9BZ0J0REMsU0FmZSxXQUNmLE1BQU8sQ0FDTEMsS0FBU04sRUFBUyxJQUFJQyxFQUN0QkMsTUFBSyxFQUNMQyxJQUFLLEdBQUdBLE1EbUJaLE1BQU8sQ0FDTGlCLEtBTFcsV0FIWHZCLEVBQUt1QixTRGJQNkQsQ0FBZ0J6RCxTQUFTaUQsZUFBZSxVQUE0QnJELFEiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGVyc29uIH0gZnJvbSBcIi4uL3R5cGVzXCJcblxuY29uc3QgdGVhY2hlciA9ICh7IGlkLCBmaXJzdE5hbWUsIGxhc3ROYW1lLCBlbWFpbCwgYWdlLCB0eXBlIH06IFBlcnNvbikgPT4ge1xuICBjb25zdCBzaG93Q2FzZSA9ICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogYCR7Zmlyc3ROYW1lfSAke2xhc3ROYW1lfWAsXG4gICAgICBlbWFpbCxcbiAgICAgIGFnZTogYCR7YWdlfWAsXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBpZCxcbiAgICBmaXJzdE5hbWUsXG4gICAgbGFzdE5hbWUsXG4gICAgZW1haWwsXG4gICAgYWdlLFxuICAgIHR5cGUsXG4gICAgc2hvd0Nhc2UsXG4gIH1cbn1cblxuY29uc3QgdGVhY2hlcnMgPSBbXG4gIHRlYWNoZXIoeyBpZDogMSwgZmlyc3ROYW1lOiBcIm1hcmtcIiwgbGFzdE5hbWU6IFwic21pdGhcIiwgZW1haWw6IFwibWFya0Bpby5jb21cIiwgYWdlOiAzNywgdHlwZTogXCJ0XCIgfSksXG4gIHRlYWNoZXIoeyBpZDogMiwgZmlyc3ROYW1lOiBcImdlb3JnZVwiLCBsYXN0TmFtZTogXCJwaWVycmVcIiwgZW1haWw6IFwicGllcnJlQGlvLmNvbVwiLCBhZ2U6IDQ4LCB0eXBlOiBcInRcIiB9KSxcbiAgdGVhY2hlcih7IGlkOiAzLCBmaXJzdE5hbWU6IFwiY2FybFwiLCBsYXN0TmFtZTogXCJjYXJsXCIsIGVtYWlsOiBcImNhcmxAaW8uY29tXCIsIGFnZTogMzYsIHR5cGU6IFwidFwiIH0pLFxuICB0ZWFjaGVyKHsgaWQ6IDQsIGZpcnN0TmFtZTogXCJib2JcIiwgbGFzdE5hbWU6IFwicm9vbmV5XCIsIGVtYWlsOiBcImJvYkBpby5jb21cIiwgYWdlOiAzMSwgdHlwZTogXCJ0XCIgfSksXG5dXG5cbnR5cGUgVGVhY2hlciA9IHR5cGVvZiB0ZWFjaGVyXG5cbmV4cG9ydCB7IHRlYWNoZXIsIHRlYWNoZXJzLCBUZWFjaGVyIH1cbiIsImltcG9ydCB7IHRlYWNoZXJzIH0gZnJvbSBcIi4uL21vZGVscy90ZWFjaGVyXCJcbmltcG9ydCB7IGxpc3RWaWV3IH0gZnJvbSBcIi4uL3ZpZXdzL2xpc3Qtdmlld1wiXG5cbmNvbnN0IHRlYWNoZXJDb250cm9sbGVyID0gKHBhcmVudEVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50KSA9PiB7XG4gIGNvbnN0IHZpZXcgPSBsaXN0VmlldyhwYXJlbnRFbGVtZW50LCB0ZWFjaGVycywgXCJ0ZWFjaGVyc1wiLCBbXCJuYW1lXCIsIFwiZW1haWxcIiwgXCJhZ2VcIl0pXG5cbiAgY29uc3QgcmVuZGVyID0gKCkgPT4ge1xuICAgIHZpZXcuaW5pdCgpXG4gIH1cblxuICBjb25zdCBpbml0ID0gKCkgPT4ge1xuICAgIHJlbmRlcigpXG4gIH1cbiAgcmV0dXJuIHtcbiAgICBpbml0LFxuICB9XG59XG5cbmV4cG9ydCB7IHRlYWNoZXJDb250cm9sbGVyIH1cbiIsImNvbnN0IGxpc3RWaWV3ID0gPFQ+KHBhcmVudEVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50LCB4czogVFtdLCB0aXRsZTogc3RyaW5nLCBzdWJUaXRsZXM6IHN0cmluZ1tdKSA9PiB7XG4gIGNvbnN0IHJhd0h0bWwgPSAoKSA9PlxuICAgIGAgICBcbiAgICA8ZGl2IGNsYXNzPVwidGFibGUtd3JhcHBlciB3cmFwcGVyLSR7dGl0bGV9XCI+XG4gICAgPHRhYmxlIGNsYXNzPVwiJHt0aXRsZX1cIj5cbiAgICAgICAgPGNhcHRpb24+JHt0aXRsZX08L2NhcHRpb24+XG4gICAgICAgIDx0aGVhZD5cbiAgICAgICAgICAke3N1YlRpdGxlcy5tYXAodCA9PiBgPHRoPiR7dH08L3RoPmApLmpvaW4oXCJcIil9XG4gICAgICAgIDwvdGhlYWQ+XG4gICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAke3hzXG4gICAgICAgICAgICAubWFwKChkYXRhOiBhbnkpID0+IHtcbiAgICAgICAgICAgICAgY29uc3Qgc2hvd0Nhc2UgPSBkYXRhLnNob3dDYXNlKClcbiAgICAgICAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgICAgICAgICA8dHIgZGF0YS1pZD1cIiR7ZGF0YS5pZH1cIiBpZD1cIiR7XG4gICAgICAgICAgICAgICAgZGF0YS50eXBlID09PSBcInNcIlxuICAgICAgICAgICAgICAgICAgPyBgc3R1ZGVudC0ke2RhdGEuaWR9YFxuICAgICAgICAgICAgICAgICAgOiBkYXRhLnR5cGUgPT09IFwidFwiXG4gICAgICAgICAgICAgICAgICA/IGB0ZWFjaGVyLSR7ZGF0YS5pZH1gXG4gICAgICAgICAgICAgICAgICA6IGBjb3Vyc2UtJHtkYXRhLmlkfWBcbiAgICAgICAgICAgICAgfVwiPlxuICAgICAgICAgICAgICAgICR7T2JqZWN0LmtleXMoc2hvd0Nhc2UpXG4gICAgICAgICAgICAgICAgICAubWFwKGtleSA9PiBgPHRkIGRhdGEtaW5mbz1cIiR7c2hvd0Nhc2Vba2V5XX1cIj4ke3Nob3dDYXNlW2tleV19PC90ZD5gKVxuICAgICAgICAgICAgICAgICAgLmpvaW4oXCJcIil9XG4gICAgICAgICAgICAgICAgPC90cj5cbiAgICAgICAgICBgXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmpvaW4oXCJcIil9XG4gICAgICAgIDwvdGJvZHk+XG4gICAgICA8L3RhYmxlPlxuICAgIDwvZGl2PlxuICAgIGBcblxuICBjb25zdCByZW5kZXIgPSAoKSA9PiB7XG4gICAgcGFyZW50RWxlbWVudC5pbm5lckhUTUwgPSByYXdIdG1sKClcbiAgfVxuXG4gIGNvbnN0IG9uQ2xpY2sgPSAoaGFuZGxlcjogRnVuY3Rpb24pID0+IHtcbiAgICBjb25zdCB0cnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwidHJcIilcbiAgICB0cnMuZm9yRWFjaCh0ciA9PlxuICAgICAgdHIuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgW3R5cGVdID0gdHIuaWQuc3BsaXQoXCItXCIpXG4gICAgICAgIGlmICh0eXBlID09PSBcInN0dWRlbnRcIikge1xuICAgICAgICAgIGhhbmRsZXIocGFyc2VJbnQodHIuZGF0YXNldC5pZCEsIDEwKSlcbiAgICAgICAgfVxuICAgICAgICAvLyBzZXNzaW9uU3RvcmFnZS5zZXRJdGVtKFwidXNlclwiLCBTdHJpbmcodHIuZGF0YXNldC5pZCkpXG4gICAgICB9KVxuICAgIClcbiAgfVxuXG4gIGNvbnN0IGluaXQgPSAoKSA9PiB7XG4gICAgcmVuZGVyKClcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaW5pdCxcbiAgICByYXdIdG1sLFxuICAgIG9uQ2xpY2ssXG4gIH1cbn1cblxuZXhwb3J0IHsgbGlzdFZpZXcgfVxuIiwiaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gXCIuLi90eXBlc1wiXG5cbmNvbnN0IGNvdXJzZSA9IChpZDogbnVtYmVyLCB0aXRsZTogU3ViamVjdCwgYWJvdXQ6IHN0cmluZywgZHVyYXRpb246IHN0cmluZykgPT4ge1xuICBjb25zdCBzaG93Q2FzZSA9ICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgdGl0bGUsXG4gICAgICBkdXJhdGlvbixcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGlkLFxuICAgIHRpdGxlLFxuICAgIGFib3V0LFxuICAgIGR1cmF0aW9uLFxuICAgIHNob3dDYXNlLFxuICB9XG59XG5cbnR5cGUgQ291cnNlVHlwZSA9IHR5cGVvZiBjb3Vyc2VcblxuY29uc3QgY291cnNlcyA9IFtcbiAgY291cnNlKDEsIFwiZnJlbmNoXCIsIFwiZnJlbmNoIGNsYXNzXCIsIFwiNWhcIiksXG4gIGNvdXJzZSgyLCBcImhpc3RvcnlcIiwgXCJoaXN0b3J5IGNsYXNzXCIsIFwiM2hcIiksXG4gIGNvdXJzZSgzLCBcIm1hdGhcIiwgXCJtYXRoIGNsYXNzXCIsIFwiNGhcIiksXG4gIGNvdXJzZSg0LCBcImVuZ2xpc2hcIiwgXCJlbmdsaXNoIGNsYXNzXCIsIFwiM2hcIiksXG5dXG5cbmV4cG9ydCB7IGNvdXJzZSwgY291cnNlcywgQ291cnNlVHlwZSB9XG4iLCJpbXBvcnQgeyBQZXJzb24gfSBmcm9tIFwiLi4vdHlwZXNcIlxuXG5jb25zdCBzdHVkZW50ID0gKHsgaWQsIGZpcnN0TmFtZSwgbGFzdE5hbWUsIGVtYWlsLCBhZ2UsIHR5cGUgfTogUGVyc29uKSA9PiB7XG4gIGNvbnN0IHNob3dDYXNlID0gKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiBgJHtmaXJzdE5hbWV9ICR7bGFzdE5hbWV9YCxcbiAgICAgIGVtYWlsLFxuICAgICAgYWdlOiBgJHthZ2V9YCxcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGlkLFxuICAgIGZpcnN0TmFtZSxcbiAgICBsYXN0TmFtZSxcbiAgICBlbWFpbCxcbiAgICBhZ2UsXG4gICAgdHlwZSxcbiAgICBzaG93Q2FzZSxcbiAgfVxufVxuXG50eXBlIFN0dWRlbnQgPSB0eXBlb2Ygc3R1ZGVudFxuY29uc3Qgc3R1ZGVudHMgPSBbXG4gIHN0dWRlbnQoeyBpZDogMSwgZmlyc3ROYW1lOiBcImJvYlwiLCBsYXN0TmFtZTogXCJzbWl0aFwiLCBlbWFpbDogXCJib2JAaW8uY29tXCIsIGFnZTogMTcsIHR5cGU6IFwic1wiIH0pLFxuICBzdHVkZW50KHsgaWQ6IDIsIGZpcnN0TmFtZTogXCJqb2VcIiwgbGFzdE5hbWU6IFwiam9uc3NvblwiLCBlbWFpbDogXCJqb2VAaW8uY29tXCIsIGFnZTogMTgsIHR5cGU6IFwic1wiIH0pLFxuICBzdHVkZW50KHsgaWQ6IDMsIGZpcnN0TmFtZTogXCJwaGlsaXBcIiwgbGFzdE5hbWU6IFwib2Nvbm5vclwiLCBlbWFpbDogXCJwaEBpby5jb21cIiwgYWdlOiAxNiwgdHlwZTogXCJzXCIgfSksXG4gIHN0dWRlbnQoeyBpZDogNCwgZmlyc3ROYW1lOiBcImFubmFcIiwgbGFzdE5hbWU6IFwiZnJhbmtsaW5cIiwgZW1haWw6IFwiYW5uYUBpby5jb21cIiwgYWdlOiAyMSwgdHlwZTogXCJzXCIgfSksXG5dXG5cbmV4cG9ydCB7IHN0dWRlbnQsIHN0dWRlbnRzLCBTdHVkZW50IH1cbiIsImltcG9ydCB7IFNlcnZpY2UgfSBmcm9tIFwiLi9zZXJ2aWNlXCJcblxuZXhwb3J0IGNsYXNzIEFkbWluTWVkaWF0b3Ige1xuICBjb2xsZWN0aW9uOiBSZWNvcmQ8c3RyaW5nLCBTZXJ2aWNlPlxuICBtZXNzYWdlczogYW55W11cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5jb2xsZWN0aW9uID0ge31cbiAgICB0aGlzLm1lc3NhZ2VzID0gW11cbiAgfVxuICByZWdpc3RlcihzZXJ2aWNlOiBTZXJ2aWNlKSB7XG4gICAgdGhpcy5jb2xsZWN0aW9uW3NlcnZpY2UubmFtZV0gPSBzZXJ2aWNlXG4gICAgc2VydmljZS5hZG1pbk1lZGlhdG9yID0gdGhpc1xuICB9XG5cbiAgc2VuZChtZXNzYWdlOiBzdHJpbmcsIGZyb206IGFueSkge1xuICAgIHRoaXMubWVzc2FnZXMucHVzaCh7IG1lc3NhZ2UsIGZyb20gfSlcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgYWRtaW5NZWRpYXRvciA9IG5ldyBBZG1pbk1lZGlhdG9yKClcbiIsImltcG9ydCB7IEFkbWluTWVkaWF0b3IgfSBmcm9tIFwiLi9tYWluXCJcblxuY2xhc3MgU2VydmljZSB7XG4gIG5hbWU6IHN0cmluZ1xuICBhZG1pbk1lZGlhdG9yOiBBZG1pbk1lZGlhdG9yIHwgbnVsbFxuXG4gIGNvbnN0cnVjdG9yKG5hbWU6IHN0cmluZykge1xuICAgIHRoaXMubmFtZSA9IG5hbWVcbiAgICB0aGlzLmFkbWluTWVkaWF0b3IgPSBudWxsXG4gIH1cblxuICBzZW5kKG1lc3NhZ2U6IHN0cmluZykge1xuICAgIHRoaXMuYWRtaW5NZWRpYXRvcj8uc2VuZChtZXNzYWdlLCB0aGlzKVxuICB9XG59XG5cbmV4cG9ydCB7IFNlcnZpY2UgfVxuIiwiaW1wb3J0IHsgYWRtaW5NZWRpYXRvciB9IGZyb20gXCIuLi9tZWRpYXRvci9tYWluXCJcbmltcG9ydCB7IFNlcnZpY2UgfSBmcm9tIFwiLi4vbWVkaWF0b3Ivc2VydmljZVwiXG5pbXBvcnQgeyBQZXJzb24sIFN1YmplY3QgfSBmcm9tIFwiLi4vdHlwZXNcIlxuaW1wb3J0IHsgbGlzdFZpZXcgfSBmcm9tIFwiLi9saXN0LXZpZXdcIlxuXG5leHBvcnQgaW50ZXJmYWNlIExpc3RlbmVyPFQ+IHtcbiAgZXZlbnQ6IHsgdGFyZ2V0OiBUIH1cbn1cblxuY29uc3QgbW9kYWxWaWV3ID0gPFQ+KFxuICBwYXJlbnRFbGVtZW50OiBIVE1MRGl2RWxlbWVudCxcbiAgcGVyc29uOiBQZXJzb24sXG4gIHhzOiBUW10sXG4gIHRpdGxlOiBzdHJpbmcsXG4gIHN1YlRpdGxlczogc3RyaW5nW11cbikgPT4ge1xuICBjb25zdCB2aWV3ID0gbGlzdFZpZXcocGFyZW50RWxlbWVudCwgeHMsIHRpdGxlLCBzdWJUaXRsZXMpXG5cbiAgbGV0IG1lc3NhZ2VGb3JQZXJzb24gPSBcIlwiXG4gIGNvbnN0IHVwZGF0ZVRleHQgPSAobXNnOiBzdHJpbmcpID0+IHtcbiAgICBtZXNzYWdlRm9yUGVyc29uID0gbXNnXG4gIH1cbiAgY29uc3QgdXBkYXRlQWRtaW5NZWRpYXRvciA9ICgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhhZG1pbk1lZGlhdG9yKVxuICB9XG5cbiAgY29uc3QgcmVuZGVyID0gKCkgPT4ge1xuICAgIHBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcInNob3ctbW9kYWxcIilcbiAgICBjb25zdCBodG1sID0gYFxuICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1jb250YWluZXJcIj5cbiAgICAgICR7dmlldy5yYXdIdG1sKCl9XG4gICAgICAke21lc3NhZ2VGb3JQZXJzb259XG4gICAgICA8YnV0dG9uIGNsYXNzPVwiY2xvc2UtbW9kYWxcIj5cbiAgICAgICAg4p2MXG4gICAgICA8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgICBgXG4gICAgcGFyZW50RWxlbWVudC5pbm5lckhUTUwgPSBodG1sXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jbG9zZS1tb2RhbFwiKT8uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcInNob3ctbW9kYWxcIilcbiAgICB9KVxuICAgIGNvbnN0IHN0dWRlbnRTZXJ2aWNlID0gbmV3IFNlcnZpY2UocGVyc29uLmZpcnN0TmFtZSlcbiAgICBhZG1pbk1lZGlhdG9yLnJlZ2lzdGVyKHN0dWRlbnRTZXJ2aWNlKVxuICAgIGNvbnN0IHRkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWwgdGJvZHkgdHIgdGRcIikgYXMgTm9kZUxpc3RcblxuICAgIEFycmF5LmZyb20odGRzKS5mb3JFYWNoKHRkID0+IHtcbiAgICAgIGNvbnN0IHRkRWxlbWVudCA9IHRkIGFzIEhUTUxFbGVtZW50XG4gICAgICBjb25zdCBpbmZvID0gdGRFbGVtZW50LmRhdGFzZXQuaW5mbyBhcyBTdWJqZWN0XG5cbiAgICAgIGlmIChpbmZvID09PSBcImVuZ2xpc2hcIiB8fCBpbmZvID09PSBcImZyZW5jaFwiIHx8IGluZm8gPT09IFwiaGlzdG9yeVwiIHx8IGluZm8gPT09IFwibWF0aFwiKSB7XG4gICAgICAgIHRkLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQ6IGFueSkgPT4ge1xuICAgICAgICAgIHN0dWRlbnRTZXJ2aWNlLnNlbmQoXG4gICAgICAgICAgICBgU3R1ZGVudCAke3BlcnNvbi5maXJzdE5hbWV9ICR7cGVyc29uLmxhc3ROYW1lfSBoYXMgYmVlbiByZWdpc3RlcmVkIGZvciB0aGUgY291cnNlICR7aW5mb31gXG4gICAgICAgICAgKVxuXG4gICAgICAgICAgY29uc3QgY29uZmlybWF0aW9uVGV4dCA9IGBZb3UgaGF2ZSBub3cgYmVlbiByZWdpc3RlcmVkIHRvIHRoZSAke2V2ZW50LnRhcmdldC5pbm5lclRleHR9IENvdXJzZWBcbiAgICAgICAgICB1cGRhdGVUZXh0KGNvbmZpcm1hdGlvblRleHQpXG5cbiAgICAgICAgICB1cGRhdGVBZG1pbk1lZGlhdG9yKClcbiAgICAgICAgICBpbml0KClcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgY29uc3QgaW5pdCA9ICgpID0+IHtcbiAgICByZW5kZXIoKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBpbml0LFxuICB9XG59XG5cbmV4cG9ydCB7IG1vZGFsVmlldyB9XG4iLCJpbXBvcnQgeyBjb3Vyc2VzIH0gZnJvbSBcIi4uL21vZGVscy9jb3Vyc2VcIlxuaW1wb3J0IHsgc3R1ZGVudHMgfSBmcm9tIFwiLi4vbW9kZWxzL3N0dWRlbnRcIlxuaW1wb3J0IHsgUGVyc29uIH0gZnJvbSBcIi4uL3R5cGVzXCJcbmltcG9ydCB7IGxpc3RWaWV3IH0gZnJvbSBcIi4uL3ZpZXdzL2xpc3Qtdmlld1wiXG5pbXBvcnQgeyBtb2RhbFZpZXcgfSBmcm9tIFwiLi4vdmlld3MvbW9kYWwtdmlld1wiXG5cbmNvbnN0IHN0dWRlbnRDb250cm9sbGVyID0gKFxuICBwYXJlbnRFbGVtZW50OiBIVE1MRGl2RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubWFpblwiKSBhcyBIVE1MRGl2RWxlbWVudFxuKSA9PiB7XG4gIGNvbnN0IHZpZXcgPSBsaXN0VmlldyhwYXJlbnRFbGVtZW50LCBzdHVkZW50cywgXCJzdHVkZW50c1wiLCBbXCJuYW1lXCIsIFwiZW1haWxcIiwgXCJhZ2VcIl0pXG5cbiAgY29uc3QgcmVuZGVyID0gKCkgPT4ge1xuICAgIHZpZXcuaW5pdCgpXG4gIH1cblxuICBjb25zdCBnZXRTdHVkZW50ID0gKGlkOiBudW1iZXIpID0+IHtcbiAgICBjb25zdCBzdHVkZW50ID0gc3R1ZGVudHMuZmluZChzdHVkZW50ID0+IHN0dWRlbnQuaWQgPT09IGlkKSBhcyBQZXJzb25cbiAgICBjb25zdCBtb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxcIikgYXMgSFRNTERpdkVsZW1lbnRcbiAgICBtb2RhbFZpZXcobW9kYWwsIHN0dWRlbnQsIGNvdXJzZXMsIFwiY291cnNlc1wiLCBbXCJ0aXRsZVwiLCBcImR1cmF0aW9uXCJdKS5pbml0KClcbiAgfVxuXG4gIGNvbnN0IGhhbmRsZUNsaWNrID0gKCkgPT4ge1xuICAgIHZpZXcub25DbGljayhnZXRTdHVkZW50KVxuICB9XG5cbiAgY29uc3QgaW5pdCA9ICgpID0+IHtcbiAgICByZW5kZXIoKVxuICAgIGhhbmRsZUNsaWNrKClcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaW5pdCxcbiAgfVxufVxuXG5leHBvcnQgeyBzdHVkZW50Q29udHJvbGxlciB9XG4iLCJpbXBvcnQgeyB0ZWFjaGVyQ29udHJvbGxlciB9IGZyb20gXCIuL3dlc2NvYXN0My4wL2NvbnRyb2xsZXJzL3RlYWNoZXJcIlxuaW1wb3J0IHsgc3R1ZGVudENvbnRyb2xsZXIgfSBmcm9tIFwiLi93ZXNjb2FzdDMuMC9jb250cm9sbGVycy9zdHVkZW50XCJcbmltcG9ydCB7IGFkbWluQ29udHJvbGxlciB9IGZyb20gXCIuL3dlc2NvYXN0My4wL2NvbnRyb2xsZXJzL2FkbWluXCJcbjsoKCkgPT4ge1xuICBzdHVkZW50Q29udHJvbGxlcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN0dWRlbnRzXCIpIGFzIEhUTUxEaXZFbGVtZW50KS5pbml0KClcbiAgdGVhY2hlckNvbnRyb2xsZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZWFjaGVyc1wiKSBhcyBIVE1MRGl2RWxlbWVudCkuaW5pdCgpXG4gIGFkbWluQ29udHJvbGxlcihkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFkbWluXCIpIGFzIEhUTUxEaXZFbGVtZW50KS5pbml0KClcbn0pKClcbiIsImltcG9ydCB7IGFkbWluIGFzIGFkbWluQ3JlYXRvciB9IGZyb20gXCIuLi9tb2RlbHMvYWRtaW5cIlxuaW1wb3J0IHsgYWRtaW5NZWRpYXRvciB9IGZyb20gXCIuLi9tZWRpYXRvci9tYWluXCJcbmltcG9ydCB7IGFkbWluVmlldyB9IGZyb20gXCIuLi92aWV3cy9hZG1pbi12aWV3XCJcblxuY29uc3QgYWRtaW5Db250cm9sbGVyID0gKHBhcmVudEVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50KSA9PiB7XG4gIGNvbnN0IHZpZXcgPSBhZG1pblZpZXcoXG4gICAgcGFyZW50RWxlbWVudCxcbiAgICBhZG1pbk1lZGlhdG9yLFxuICAgIGFkbWluQ3JlYXRvcih7XG4gICAgICBpZDogMjA0LFxuICAgICAgZmlyc3ROYW1lOiBcIkJydWNlXCIsXG4gICAgICBsYXN0TmFtZTogXCJXYXluZVwiLFxuICAgICAgYWdlOiA0NSxcbiAgICAgIGVtYWlsOiBcImJhdG1hbkBpby5jb21cIixcbiAgICAgIHR5cGU6IFwiYVwiLFxuICAgIH0pXG4gIClcblxuICBjb25zdCByZW5kZXIgPSAoKSA9PiB7XG4gICAgdmlldy5pbml0KClcbiAgfVxuXG4gIGNvbnN0IGluaXQgPSAoKSA9PiB7XG4gICAgcmVuZGVyKClcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaW5pdCxcbiAgfVxufVxuXG5leHBvcnQgeyBhZG1pbkNvbnRyb2xsZXIgfVxuIiwiaW1wb3J0IHsgUGVyc29uIH0gZnJvbSBcIi4uL3R5cGVzXCJcblxuY29uc3QgYWRtaW4gPSAoeyBpZCwgZmlyc3ROYW1lLCBsYXN0TmFtZSwgZW1haWwsIGFnZSwgdHlwZSB9OiBQZXJzb24pID0+IHtcbiAgY29uc3Qgc2hvd0Nhc2UgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IGAke2ZpcnN0TmFtZX0gJHtsYXN0TmFtZX1gLFxuICAgICAgZW1haWwsXG4gICAgICBhZ2U6IGAke2FnZX1gLFxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaWQsXG4gICAgZmlyc3ROYW1lLFxuICAgIGxhc3ROYW1lLFxuICAgIGVtYWlsLFxuICAgIGFnZSxcbiAgICB0eXBlLFxuICAgIHNob3dDYXNlLFxuICB9XG59XG5cbmV4cG9ydCB7IGFkbWluIH1cbiIsImltcG9ydCB7IEFkbWluTWVkaWF0b3IgfSBmcm9tIFwiLi4vbWVkaWF0b3IvbWFpblwiXG5pbXBvcnQgeyBTZXJ2aWNlIH0gZnJvbSBcIi4uL21lZGlhdG9yL3NlcnZpY2VcIlxuaW1wb3J0IHsgUGVyc29uIH0gZnJvbSBcIi4uL3R5cGVzXCJcblxuY29uc3QgYWRtaW5WaWV3ID0gKHBhcmVudEVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50LCBhZG1pbk1lZGlhdG9yOiBBZG1pbk1lZGlhdG9yLCBhZG1pbjogUGVyc29uKSA9PiB7XG4gIGNvbnN0IGFkbWluU2VydmljZSA9IG5ldyBTZXJ2aWNlKGFkbWluLmZpcnN0TmFtZSlcblxuICBsZXQgeHM6IFJlY29yZDxzdHJpbmcsIFJlY29yZDxzdHJpbmcsIGFueT4+W10gPSBbXVxuXG4gIGNvbnN0IGdldEFkbWluTWVzc2FnZXMgPSAoKSA9PiB7XG4gICAgeHMgPSBhZG1pbk1lZGlhdG9yLm1lc3NhZ2VzXG5cbiAgICByZXR1cm4geHNcbiAgfVxuXG4gIGNvbnN0IHJlbmRlciA9ICgpID0+IHtcbiAgICBjb25zdCBodG1sID0gYFxuICAgICAgPGRpdiBjbGFzcz1cImFkbWluLXdyYXBwZXIgd3JhcHBlci0ke2FkbWluU2VydmljZS5uYW1lfVwiPlxuICAgICAgPGJ1dHRvbiBpZD1cImFkbWluLXByb2ZpbGUtYnRuXCIgY2xhc3M9XCJidXR0b25cIj5JbmZvPC9idXR0b24+XG4gICAgICA8ZGl2IGNsYXNzPVwiYWRtaW4tY29udGVudFwiPlxuICAgICAgICA8aDM+IE1yIEFkbWluICR7YWRtaW5TZXJ2aWNlLm5hbWV9PC9oMz5cbiAgICAgICAgPHA+JHthZG1pblNlcnZpY2UubmFtZX08L3A+XG4gICAgICAgIDx1bCBjbGFzcz1cImFkbWluLW1lc3NhZ2VzLWxpc3RcIj5cbiAgICAgICAgICAke1xuICAgICAgICAgICAgeHMubGVuZ3RoID4gMFxuICAgICAgICAgICAgICA/IHhzLm1hcCh4ID0+IGAgPGxpPiR7eC5tZXNzYWdlfTwvbGk+IGApLmpvaW4oXCJcIilcbiAgICAgICAgICAgICAgOiBgPHA+Tm8gcmVnaXN0ZXJlZCBzdHVkZW50cyBZRVQhPC9wPmBcbiAgICAgICAgICB9XG4gICAgICAgIDwvdWw+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgPC9kaXY+XG4gICAgICBgXG5cbiAgICBwYXJlbnRFbGVtZW50LmlubmVySFRNTCA9IGh0bWxcbiAgICBnZXRBZG1pbk1lc3NhZ2VzKClcblxuICAgIGNvbnN0IGJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWRtaW4tcHJvZmlsZS1idG5cIilcblxuICAgIGJ0bj8uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGdldEFkbWluTWVzc2FnZXMoKVxuICAgICAgaW5pdCgpXG4gICAgfSlcbiAgfVxuXG4gIGNvbnN0IGluaXQgPSAoKSA9PiB7XG4gICAgcmVuZGVyKClcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaW5pdCxcbiAgfVxufVxuXG5leHBvcnQgeyBhZG1pblZpZXcgfVxuIl0sInNvdXJjZVJvb3QiOiIifQ==