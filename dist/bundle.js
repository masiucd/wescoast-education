(()=>{var t={496:(t,n,e)=>{let{urlAlphabet:o}=e(208),r=t=>crypto.getRandomValues(new Uint8Array(t)),i=(t,n,e)=>{let o=(2<<Math.log(t.length-1)/Math.LN2)-1,r=-~(1.6*o*n/t.length);return()=>{let i="";for(;;){let s=e(r),a=r;for(;a--;)if(i+=t[s[a]&o]||"",i.length===n)return i}}};t.exports={nanoid:(t=21)=>{let n="",e=crypto.getRandomValues(new Uint8Array(t));for(;t--;){let o=63&e[t];n+=o<36?o.toString(36):o<62?(o-26).toString(36).toUpperCase():o<63?"_":"-"}return n},customAlphabet:(t,n)=>i(t,n,r),customRandom:i,urlAlphabet:o,random:r}},208:t=>{t.exports={urlAlphabet:"ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW"}}},n={};function e(o){if(n[o])return n[o].exports;var r=n[o]={exports:{}};return t[o](r,r.exports,e),r.exports}(()=>{"use strict";var t,n=function(){function t(t,n,e){this.teacherController=t,this.studentsController=n,this.courseController=e}return t.prototype.render=function(){this.teacherController.init(),this.studentsController.init(),this.courseController.init()},t}(),o=function(){function t(t,n,e,o){this.rootElement=t,this.displayData=n,this.mainTitle=e,this.titles=o}return t.prototype.handleClick=function(t){},t.prototype.render=function(){var t='\n    <div class="list-wrapper">\n      <table>\n          <thead>\n          '+this.titles.map((function(t){return"<th>"+t+"</th>"})).join("")+'\n          </thead>\n          <tbody class="list list-'+this.mainTitle+'">\n              '+this.displayData.map((function(t){var n=t.showCase();return"\n                <tr>\n                  "+Object.keys(n).map((function(t){return"<td>"+n[t]+"</td>"})).join("")+"\n                  \n                </tr>"})).join("")+"\n          </tbody>\n      </table>\n    </div>\n    ";this.rootElement.insertAdjacentHTML("beforeend",t)},t}(),r=function(t,n,e,o,r){this.id=t,this.firstName=n,this.lastName=e,this.email=o,this.age=r},i=e(496),s=(t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)},function(n,e){function o(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}),a=function(t){function n(n,e,o,r,i){var s=t.call(this,n,e,o,r,i)||this;return s.courses=[],s}return s(n,t),n.prototype.showCase=function(){return{name:this.firstName+"-"+this.lastName,email:this.email,age:this.age}},n}(r);const u=[new a((0,i.nanoid)(),"Gunnar","Gren","gunnar@io.com",15),new a((0,i.nanoid)(),"Bobby","Charlton","bobby@io.com",18),new a((0,i.nanoid)(),"Linda","Lings","linda@io.com",13),new a((0,i.nanoid)(),"Jenny","Rashford","jenny@io.com",12),new a((0,i.nanoid)(),"Billy","Cambell","billy@io.com",19)];var c=function(){function t(t){this.rootElement=t,this.studentsList=new o(this.rootElement,u,"Students",["name","email","age"])}return t.prototype.renderStudent=function(){this.studentsList.render()},t.prototype.init=function(){this.renderStudent()},t}(),l=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){function o(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(o.prototype=e.prototype,new o)}}(),h=function(t){function n(n,e,o,r,i){var s=t.call(this,n,e,o,r,i)||this;return s.subjects=[],s}return l(n,t),n.prototype.showCase=function(){return{name:this.firstName+"-"+this.lastName,email:this.email,age:this.age}},n}(r);const d=[new h((0,i.nanoid)(),"Frank","Smith","frank@io.com",43),new h((0,i.nanoid)(),"Logan","Jonsson","logan@io.com",47),new h((0,i.nanoid)(),"Mia","Greger","mia@io.com",41),new h((0,i.nanoid)(),"Boris","Rooney","frank@io.com",53)];var p=function(){function t(t){this.rootElement=t,this.teachersList=new o(this.rootElement,d,"Teachers",["name","email","age"])}return t.prototype.renderTeachers=function(){this.teachersList.render()},t.prototype.init=function(){this.renderTeachers()},t}(),f=function(){function t(t,n,e,o){this.id=t,this.title=n,this.about=e,this.duration=o}return t.prototype.showCase=function(){return{title:this.title,duration:this.duration}},t}();const m=[new f((0,i.nanoid)(),"math","math is wonderful","6h"),new f((0,i.nanoid)(),"history","history is good for you","3h"),new f((0,i.nanoid)(),"swedish","without swedish you will face some serious problems","2h"),new f((0,i.nanoid)(),"english","the global language, learn it NOW!!!","5h")];var y=function(){function t(t){this.rootElement=t,this.coursesList=new o(this.rootElement,m,"course",["title","duration"])}return t.prototype.render=function(){this.coursesList.render()},t.prototype.init=function(){this.render()},t}();new n(new p(document.getElementById("teachers")),new c(document.getElementById("students")),new y(document.getElementById("courses"))).render()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,