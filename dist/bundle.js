(()=>{"use strict";var t,e,n,a=function(t){var e=t.id,n=t.firstName,a=t.lastName,i=t.email,o=t.age,r=t.type;return{id:e,firstName:n,lastName:a,email:i,age:o,type:r,showCase:function(){return{name:n+" "+a,email:i,age:""+o}}}},i=[a({id:1,firstName:"mark",lastName:"smith",email:"mark@io.com",age:37,type:"t"}),a({id:2,firstName:"george",lastName:"pierre",email:"pierre@io.com",age:48,type:"t"}),a({id:3,firstName:"carl",lastName:"carl",email:"carl@io.com",age:36,type:"t"}),a({id:4,firstName:"bob",lastName:"rooney",email:"bob@io.com",age:31,type:"t"})],o=function(t,e,n,a){var i=function(){return'   \n    <div class="table-wrapper wrapper-'+n+'">\n    <table class="'+n+'">\n        <caption>'+n+"</caption>\n        <thead>\n          "+a.map((function(t){return"<th>"+t+"</th>"})).join("")+"\n        </thead>\n        <tbody>\n          "+e.map((function(t){var e=t.showCase();return'\n                <tr data-id="'+t.id+'" id="'+("s"===t.type?"student-"+t.id:"t"===t.type?"teacher-"+t.id:"course-"+t.id)+'">\n                '+Object.keys(e).map((function(t){return'<td data-info="'+e[t]+'">'+e[t]+"</td>"})).join("")+"\n                </tr>\n          "})).join("")+"\n        </tbody>\n      </table>\n    </div>\n    "};return{init:function(){t.innerHTML=i()},rawHtml:i,onClick:function(t){document.querySelectorAll("tr").forEach((function(e){return e.addEventListener("click",(function(){"student"===e.id.split("-")[0]&&t(parseInt(e.dataset.id,10))}))}))}}},r=function(t,e,n,a){return{id:t,title:e,about:n,duration:a,showCase:function(){return{title:e,duration:a}}}},s=[r(1,"french","french class","5h"),r(2,"history","history class","3h"),r(3,"math","math class","4h"),r(4,"english","english class","3h")],c=function(t){var e=t.id,n=t.firstName,a=t.lastName,i=t.email,o=t.age,r=t.type;return{id:e,firstName:n,lastName:a,email:i,age:o,type:r,showCase:function(){return{name:n+" "+a,email:i,age:""+o}}}},l=[c({id:1,firstName:"bob",lastName:"smith",email:"bob@io.com",age:17,type:"s"}),c({id:2,firstName:"joe",lastName:"jonsson",email:"joe@io.com",age:18,type:"s"}),c({id:3,firstName:"philip",lastName:"oconnor",email:"ph@io.com",age:16,type:"s"}),c({id:4,firstName:"anna",lastName:"franklin",email:"anna@io.com",age:21,type:"s"})];(t=document.getElementById("students"),e=o(t,l,"students",["name","email","age"]),n=function(t){l.find((function(e){return e.id===t})),function(t,e,n,a,i){var r=o(t,n,a,i);return{init:function(){!function(){var e;t.classList.add("show-modal");var n='\n    <div class="modal-container">\n      '+r.rawHtml()+'\n      <button class="close-modal">\n        ‚ùå\n      </button>\n    </div>\n    ';t.innerHTML=n,null===(e=document.querySelector(".close-modal"))||void 0===e||e.addEventListener("click",(function(){t.classList.remove("show-modal")}));var a=document.querySelectorAll(".modal tbody tr td");Array.from(a).forEach((function(t){var e=t.dataset.info;"english"!==e&&"french"!==e&&"history"!==e&&"math"!==e||t.addEventListener("click",(function(t){console.log("info",e)}))}))}()}}}(document.querySelector(".modal"),0,s,"courses",["title","duration"]).init()},{init:function(){e.init(),e.onClick(n)}}).init(),function(t){var e=o(t,i,"teachers",["name","email","age"]);return{init:function(){e.init()}}}(document.getElementById("teachers")).init()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,